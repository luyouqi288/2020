#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//指针01：
//int main()
//{
//	int a = 0;
//	int* p = &a;//指针变量  将a的地址存放在p的变量中
//	return 0;
//}
//指针类型
//int main()
//{
//	printf("%d\n", sizeof(int*));
//	printf("%d\n", sizeof(char*));
//	printf("%d\n", sizeof(short*));
//	printf("%d\n", sizeof(double*));	//      4
//	int a = 0x11223344;					//double*p *p能够访问8个字节
//	int* pa = &a;						//int*p    *p能够访问4个字节
//	*pa = 20;							//char*p   *p能够访问1个字节
//	printf("%p\n", pa);					//				指针类型决定访问空间的大小
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	int a = 0;
//	int* pa = &a;
//	printf("%p\n", pa);
//	printf("%p\n", pa + 1);//     跳了4个字节（一个整形）
//	char arr = 'a';
//	char* pc = &arr;
//	printf("%p\n", pc);
//	printf("%p\n", pc + 1);//    跳了1个字节（一个字符）
//	return 0;										//指针类型决定指针  （步长）
//}

//int main()
//{
//	int arr[10] = { 0 };
//	int* p = arr;     //数组名-首元素的地址
//	int i = 0;
//	for (i = 0;i < 10;i++)
//	{
//		*(p + i) = 1;
//	}
//	printf("%d\n", arr[3]);
//	return 0;
//}

					//				野指针（无法管理的指针，指向的位置是不可知的）

//int main()  //   野指针    1
//{
//	int a;    //局部变量未初始化，默认是随机值
//	int* p;   //局部的指针变量，就被初始化为随机值（尽量避免）
//	return 0;
//}
//int main()//   野指针    2
//{
//	int arr[10] = { 0 };
//	int* p = arr;
//	int i = 0;
//	for (i = 0;i < 12;i++)
//	{
//		p++;
//	}
//								//指针越界导致
//	return 0;
//}
//int* test()    //  野指针  03
//{
//	int a = 10;
//	return &a;
//}
//int main()
//{
//	int* p = test();
//	*p = 20;			//    a的空间已经释放
//	return 0;
//}
