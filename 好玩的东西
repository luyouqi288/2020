#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
void move(int n, int x, int y, int z)
{
	if (n == 1)
		printf("%c-->%c\n", x, z);
	else
	{
		move(n - 1, x, z, y);
		printf("%c-->%c\n", x, z);
		move(n - 1, y, x, z);
	}
}
int main()
{
	int h;
	printf("\ninput number:\n");
	scanf("%d", &h);
	printf("the step to moving %2d diskes:\n", h);
	move(h, 'a', 'b', 'c');
	return 0;
}
   


scanf()函数是格式化输入函数，它从标准输入设备(键盘) 读取输入的信息。

其调用格式为:      scanf("<格式化字符串>"，<地址表>);

格式化字符串包括以下三类不同的字符；

1、 格式化说明符：

格式化说明符与printf()函数中的格式说明符基本相同。但和printf()函数中格式字符串的用法有一些小区别。我们来看下面这个表。

格式字符                                           说明

%d                                              从键盘输入十进制整数

%o                                             从键盘输入八进制整数

%x                                             从键盘输入十六进制整数

%c                                             从键盘输入一个字符

%s                                              从键盘输入一个字符串

%f                                             从键盘输入一个实数

%e                                             与%f的作用相同

附加格式说明字符表                                         

字符                                           说明

L                                            输入"长"数据

H                                           输入"短"数据

M                                           指定输入数据所占宽度

*                                           空读一个数据

2、   空白字符: 空白字符会使scanf()函数在读操作中略去输入中的一个或多个空白字符。

3、   非空白字符: 一个非空白字符会使scanf()函数在读入时剔除掉与这个非空白字符相同的字符。

地址表是需要读入的所有变量的地址，而不是变量本身。这与printf()函数完全不同，要特别注意。各个变量的地址之间同","分开。

 

  首先我们来看一下格式化说明符“%d”，从键盘输入一个十进制整数，当多个输入时，采用一个或多个空格做为分隔符，看下面的例子：

 


运行结果如下：





分析如下：

  scanf格式化输入中有多个空格和’\n’，但是我们采用的是%d格式化输入，所以空格和’\n’等转义字符是没有读入的，这里有一个”%*3d”，意思是跳过输入的前三个整型数字，从第四个数字开始读入，所以我们输入“432432432”，输出的却是432432，而不是432432432.

有同学就要问了，为什么输入“432432432”后还有输入一个字母’d’呢？其实这个地方输入任何一个非空字节都是可以的。因为scanf必须从缓冲区读入一个非空字符再回车才会刷新缓冲区，这里scanf已经把“432432432”读入变量，缓冲区里就为空了，所以必须输入一个非空字节，这样按回车才会结束scanf输入。

 

好，下面我们来看”%c”,还是先写一个例子：



运行结果如下：



分析：

  这里一目了然，采用“%c”输入时，scanf不仅会读入非空字符，遇到空字符他也会读入。

再看一个例子：

#include <stdio.h>

void main()

{

       char a,b;

       printf("input charactera,b\n");

       scanf("%c %c",&a,&b);/*注意两个%c之间有个空格*/

       printf("\n%c%c\n",a,b);

}

本例表示scanf格式控制串"%c %c"之间有空格时， 输入的数据之间可以有空格间隔。这时候我们应该这样输入’a’空格’b’。

 

下面看一下”%s”,遇到空格换行等转义字符不读入，



分析：

  这里一目了然，采用“%c”输入时，scanf不仅会读入非空字符，遇到空字符他也会读入。

再看一个例子：

#include <stdio.h>

void main()

{

       char a,b;

       printf("input charactera,b\n");

       scanf("%c %c",&a,&b);/*注意两个%c之间有个空格*/

       printf("\n%c%c\n",a,b);

}

本例表示scanf格式控制串"%c %c"之间有空格时， 输入的数据之间可以有空格间隔。这时候我们应该这样输入’a’空格’b’。

 

下面看一下”%s”,遇到空格换行等转义字符不读入，



运行结果如下：

