#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<math.h>

//int main()						//					自行复杂版100到200之间的素数
//{
//	int i = 0;
//	int n = 0;
//	int count = 0;
//	for (i = 100;i <= 200;i++)
//	{
//		count = 0;
//		for (n = 1;n <= i;n++)
//		{
//			if (i % n == 0)
//			{
//				count++;
//			}
//		}
//		if (count != 2)
//		{
//			printf("%d ", i);
//		}
//	}
//	return 0;
//}

//int main()		//			题1
//{
//	int a = 0;
//	int b = 0;
//	for (a = 1, b = 1;a <= 200;a++)
//	{
//		if (b > 20)
//		{
//			break;
//		}
//		if (b % 3 == 1)
//		{
//			b = b + 3;
//			continue;
//		}
//		b = b - 5;
//	}
//	printf("%d\n", a);
//	return 0;
//}

//int main()//						双if使用   1到100内含9的个数
//{
//	int i = 0;
//	int count = 0;
//	for (i = 1;i <= 100;i++)
//	{
//		if (i % 10 == 9)
//		{
//			printf("%d\n", i);
//			count++;
//		}
//		if (i / 10 == 9)
//		{
//			count++;
//			printf("%d\n", i);
//		}
//	}
//	printf("count = %d\n", count);
//	return 0;
//}

//int main()//					自我复杂版
//{
//	int i = 0;
//	double n = 0;
//	double m = 0;
//	for (i = 1;i <= 100;i++)
//	{
//		n = 1.0 / i;//     1.0  的重要性
//		m = m + n;
//	}
//	printf("%lf\n", m);
//	return 0;
//}   

//int main()								//  答案版
//{
//	int i = 0;
//	double sum = 0;
//	for (i = 1;i <= 100;i++)
//	{
//		sum += 1.0 / i;
//	}
//	printf("sum = %lf\n", sum);
//	return 0;
//}

//int main()
//{
//	int i = 0;
//	double sum = 0;
//	int m = 1;
//	for (i = 1;i <= 100;i++)
//	{
//		sum += m * 1.0 / i;
//		m = -m;
//	}
//	printf("%lf\n", sum);
//	return 0;
//}

//int main()//						十个数里面求最大值
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int max = arr[0];
//	int i = 0;
//	int se = sizeof(arr) / sizeof(arr[0]);
//	for (i = 1;i < se;i++)
//	{
//		if (arr[i] > max)
//		{
//			max = arr[i];
//		}
//	}
//	printf("%d\n", max);
//	return 0;
//}

//int main()							//9*9乘法口诀表
//{
//	int i = 0;
//	int n = 0;
//	for (i = 1;i <= 9;i++)
//	{
//		for (n = 1;n <=i;n++)
//		{
//			printf("%d*%d=%-2d ", n, i, n * i);//2d及打印两位且右对齐    -2d左对齐两位
//		}
//		printf("\n");
//	}
//}

//int main()//									二分查找
//{
//	int i = 0;
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int k = 0;
//	scanf_s("%d", &k);
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	for (i = 0;i <= sz;i++)
//	{
//		if (arr[i] == k)
//		{
//			printf("%d\n", i);
//			printf("找到了");
//		}
//		else
//		{
//			continue;
//			printf("找不到");
//		}
//	}
//	return 0;
//}
